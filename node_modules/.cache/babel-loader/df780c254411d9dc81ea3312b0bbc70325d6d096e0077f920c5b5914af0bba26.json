{"ast":null,"code":"import _objectSpread from \"D:/Blood_Donation_Website/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"D:/Blood_Donation_Website/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"transition\", \"transitionEnd\"];\nimport { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation(_ref, key) {\n  let {\n    protectedKeys,\n    needsAnimating\n  } = _ref;\n  const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n  needsAnimating[key] = false;\n  return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition) {\n  let {\n    delay = 0,\n    transitionOverride,\n    type\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  let {\n      transition = visualElement.getDefaultTransition(),\n      transitionEnd\n    } = targetAndTransition,\n    target = _objectWithoutProperties(targetAndTransition, _excluded);\n  if (transitionOverride) transition = transitionOverride;\n  const animations = [];\n  const animationTypeState = type && visualElement.animationState && visualElement.animationState.getState()[type];\n  for (const key in target) {\n    var _visualElement$latest;\n    const value = visualElement.getValue(key, (_visualElement$latest = visualElement.latestValues[key]) !== null && _visualElement$latest !== void 0 ? _visualElement$latest : null);\n    const valueTarget = target[key];\n    if (valueTarget === undefined || animationTypeState && shouldBlockAnimation(animationTypeState, key)) {\n      continue;\n    }\n    const valueTransition = _objectSpread({\n      delay\n    }, getValueTransition(transition || {}, key));\n    /**\n     * If the value is already at the defined target, skip the animation.\n     */\n    const currentValue = value.get();\n    if (currentValue !== undefined && !value.isAnimating && !Array.isArray(valueTarget) && valueTarget === currentValue && !valueTransition.velocity) {\n      continue;\n    }\n    /**\n     * If this is the first time a value is being animated, check\n     * to see if we're handling off from an existing animation.\n     */\n    let isHandoff = false;\n    if (window.MotionHandoffAnimation) {\n      const appearId = getOptimisedAppearId(visualElement);\n      if (appearId) {\n        const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n        if (startTime !== null) {\n          valueTransition.startTime = startTime;\n          isHandoff = true;\n        }\n      }\n    }\n    addValueToWillChange(visualElement, key);\n    value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key) ? {\n      type: false\n    } : valueTransition, visualElement, isHandoff));\n    const animation = value.animation;\n    if (animation) {\n      animations.push(animation);\n    }\n  }\n  if (transitionEnd) {\n    Promise.all(animations).then(() => {\n      frame.update(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n      });\n    });\n  }\n  return animations;\n}\nexport { animateTarget };","map":{"version":3,"names":["getValueTransition","frame","positionalKeys","setTarget","addValueToWillChange","getOptimisedAppearId","animateMotionValue","shouldBlockAnimation","_ref","key","protectedKeys","needsAnimating","shouldBlock","hasOwnProperty","animateTarget","visualElement","targetAndTransition","delay","transitionOverride","type","arguments","length","undefined","transition","getDefaultTransition","transitionEnd","target","_objectWithoutProperties","_excluded","animations","animationTypeState","animationState","getState","_visualElement$latest","value","getValue","latestValues","valueTarget","valueTransition","_objectSpread","currentValue","get","isAnimating","Array","isArray","velocity","isHandoff","window","MotionHandoffAnimation","appearId","startTime","start","shouldReduceMotion","has","animation","push","Promise","all","then","update"],"sources":["D:/Blood_Donation_Website/client/node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs"],"sourcesContent":["import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}