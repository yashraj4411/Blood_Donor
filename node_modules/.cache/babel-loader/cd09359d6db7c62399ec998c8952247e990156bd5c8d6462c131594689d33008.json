{"ast":null,"code":"import _objectSpread from \"D:/Blood_Donation_Website/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\r\n * @internal\r\n */\nclass PanSession {\n  constructor(event, handlers) {\n    let {\n      transformPagePoint,\n      contextWindow = window,\n      dragSnapToOrigin = false,\n      distanceThreshold = 3\n    } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    /**\r\n     * @internal\r\n     */\n    this.startEvent = null;\n    /**\r\n     * @internal\r\n     */\n    this.lastMoveEvent = null;\n    /**\r\n     * @internal\r\n     */\n    this.lastMoveEventInfo = null;\n    /**\r\n     * @internal\r\n     */\n    this.handlers = {};\n    /**\r\n     * @internal\r\n     */\n    this.contextWindow = window;\n    this.updatePoint = () => {\n      if (!(this.lastMoveEvent && this.lastMoveEventInfo)) return;\n      const info = getPanInfo(this.lastMoveEventInfo, this.history);\n      const isPanStarted = this.startEvent !== null;\n      // Only start panning if the offset is larger than 3 pixels. If we make it\n      // any larger than this we'll want to reset the pointer history\n      // on the first update to avoid visual snapping to the cursor.\n      const isDistancePastThreshold = distance2D(info.offset, {\n        x: 0,\n        y: 0\n      }) >= this.distanceThreshold;\n      if (!isPanStarted && !isDistancePastThreshold) return;\n      const {\n        point\n      } = info;\n      const {\n        timestamp\n      } = frameData;\n      this.history.push(_objectSpread(_objectSpread({}, point), {}, {\n        timestamp\n      }));\n      const {\n        onStart,\n        onMove\n      } = this.handlers;\n      if (!isPanStarted) {\n        onStart && onStart(this.lastMoveEvent, info);\n        this.startEvent = this.lastMoveEvent;\n      }\n      onMove && onMove(this.lastMoveEvent, info);\n    };\n    this.handlePointerMove = (event, info) => {\n      this.lastMoveEvent = event;\n      this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n      // Throttle mouse move event to once per frame\n      frame.update(this.updatePoint, true);\n    };\n    this.handlePointerUp = (event, info) => {\n      this.end();\n      const {\n        onEnd,\n        onSessionEnd,\n        resumeAnimation\n      } = this.handlers;\n      if (this.dragSnapToOrigin) resumeAnimation && resumeAnimation();\n      if (!(this.lastMoveEvent && this.lastMoveEventInfo)) return;\n      const panInfo = getPanInfo(event.type === \"pointercancel\" ? this.lastMoveEventInfo : transformPoint(info, this.transformPagePoint), this.history);\n      if (this.startEvent && onEnd) {\n        onEnd(event, panInfo);\n      }\n      onSessionEnd && onSessionEnd(event, panInfo);\n    };\n    // If we have more than one touch, don't start detecting this gesture\n    if (!isPrimaryPointer(event)) return;\n    this.dragSnapToOrigin = dragSnapToOrigin;\n    this.handlers = handlers;\n    this.transformPagePoint = transformPagePoint;\n    this.distanceThreshold = distanceThreshold;\n    this.contextWindow = contextWindow || window;\n    const info = extractEventInfo(event);\n    const initialInfo = transformPoint(info, this.transformPagePoint);\n    const {\n      point\n    } = initialInfo;\n    const {\n      timestamp\n    } = frameData;\n    this.history = [_objectSpread(_objectSpread({}, point), {}, {\n      timestamp\n    })];\n    const {\n      onSessionStart\n    } = handlers;\n    onSessionStart && onSessionStart(event, getPanInfo(initialInfo, this.history));\n    this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n  }\n  updateHandlers(handlers) {\n    this.handlers = handlers;\n  }\n  end() {\n    this.removeListeners && this.removeListeners();\n    cancelFrame(this.updatePoint);\n  }\n}\nfunction transformPoint(info, transformPagePoint) {\n  return transformPagePoint ? {\n    point: transformPagePoint(info.point)\n  } : info;\n}\nfunction subtractPoint(a, b) {\n  return {\n    x: a.x - b.x,\n    y: a.y - b.y\n  };\n}\nfunction getPanInfo(_ref, history) {\n  let {\n    point\n  } = _ref;\n  return {\n    point,\n    delta: subtractPoint(point, lastDevicePoint(history)),\n    offset: subtractPoint(point, startDevicePoint(history)),\n    velocity: getVelocity(history, 0.1)\n  };\n}\nfunction startDevicePoint(history) {\n  return history[0];\n}\nfunction lastDevicePoint(history) {\n  return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n  if (history.length < 2) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n  let i = history.length - 1;\n  let timestampedPoint = null;\n  const lastPoint = lastDevicePoint(history);\n  while (i >= 0) {\n    timestampedPoint = history[i];\n    if (lastPoint.timestamp - timestampedPoint.timestamp > secondsToMilliseconds(timeDelta)) {\n      break;\n    }\n    i--;\n  }\n  if (!timestampedPoint) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n  const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n  if (time === 0) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n  const currentVelocity = {\n    x: (lastPoint.x - timestampedPoint.x) / time,\n    y: (lastPoint.y - timestampedPoint.y) / time\n  };\n  if (currentVelocity.x === Infinity) {\n    currentVelocity.x = 0;\n  }\n  if (currentVelocity.y === Infinity) {\n    currentVelocity.y = 0;\n  }\n  return currentVelocity;\n}\nexport { PanSession };","map":{"version":3,"names":["frame","isPrimaryPointer","cancelFrame","frameData","pipe","secondsToMilliseconds","millisecondsToSeconds","addPointerEvent","extractEventInfo","distance2D","PanSession","constructor","event","handlers","transformPagePoint","contextWindow","window","dragSnapToOrigin","distanceThreshold","arguments","length","undefined","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","offset","x","y","point","timestamp","push","_objectSpread","onStart","onMove","handlePointerMove","transformPoint","update","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","type","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","a","b","_ref","delta","lastDevicePoint","startDevicePoint","velocity","getVelocity","timeDelta","i","timestampedPoint","lastPoint","time","currentVelocity","Infinity"],"sources":["D:/Blood_Donation_Website/client/node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs"],"sourcesContent":["import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\r\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\r\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\r\nimport { extractEventInfo } from '../../events/event-info.mjs';\r\nimport { distance2D } from '../../utils/distance.mjs';\r\n\r\n/**\r\n * @internal\r\n */\r\nclass PanSession {\r\n    constructor(event, handlers, { transformPagePoint, contextWindow = window, dragSnapToOrigin = false, distanceThreshold = 3, } = {}) {\r\n        /**\r\n         * @internal\r\n         */\r\n        this.startEvent = null;\r\n        /**\r\n         * @internal\r\n         */\r\n        this.lastMoveEvent = null;\r\n        /**\r\n         * @internal\r\n         */\r\n        this.lastMoveEventInfo = null;\r\n        /**\r\n         * @internal\r\n         */\r\n        this.handlers = {};\r\n        /**\r\n         * @internal\r\n         */\r\n        this.contextWindow = window;\r\n        this.updatePoint = () => {\r\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\r\n                return;\r\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\r\n            const isPanStarted = this.startEvent !== null;\r\n            // Only start panning if the offset is larger than 3 pixels. If we make it\r\n            // any larger than this we'll want to reset the pointer history\r\n            // on the first update to avoid visual snapping to the cursor.\r\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= this.distanceThreshold;\r\n            if (!isPanStarted && !isDistancePastThreshold)\r\n                return;\r\n            const { point } = info;\r\n            const { timestamp } = frameData;\r\n            this.history.push({ ...point, timestamp });\r\n            const { onStart, onMove } = this.handlers;\r\n            if (!isPanStarted) {\r\n                onStart && onStart(this.lastMoveEvent, info);\r\n                this.startEvent = this.lastMoveEvent;\r\n            }\r\n            onMove && onMove(this.lastMoveEvent, info);\r\n        };\r\n        this.handlePointerMove = (event, info) => {\r\n            this.lastMoveEvent = event;\r\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\r\n            // Throttle mouse move event to once per frame\r\n            frame.update(this.updatePoint, true);\r\n        };\r\n        this.handlePointerUp = (event, info) => {\r\n            this.end();\r\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\r\n            if (this.dragSnapToOrigin)\r\n                resumeAnimation && resumeAnimation();\r\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\r\n                return;\r\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\r\n                ? this.lastMoveEventInfo\r\n                : transformPoint(info, this.transformPagePoint), this.history);\r\n            if (this.startEvent && onEnd) {\r\n                onEnd(event, panInfo);\r\n            }\r\n            onSessionEnd && onSessionEnd(event, panInfo);\r\n        };\r\n        // If we have more than one touch, don't start detecting this gesture\r\n        if (!isPrimaryPointer(event))\r\n            return;\r\n        this.dragSnapToOrigin = dragSnapToOrigin;\r\n        this.handlers = handlers;\r\n        this.transformPagePoint = transformPagePoint;\r\n        this.distanceThreshold = distanceThreshold;\r\n        this.contextWindow = contextWindow || window;\r\n        const info = extractEventInfo(event);\r\n        const initialInfo = transformPoint(info, this.transformPagePoint);\r\n        const { point } = initialInfo;\r\n        const { timestamp } = frameData;\r\n        this.history = [{ ...point, timestamp }];\r\n        const { onSessionStart } = handlers;\r\n        onSessionStart &&\r\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\r\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\r\n    }\r\n    updateHandlers(handlers) {\r\n        this.handlers = handlers;\r\n    }\r\n    end() {\r\n        this.removeListeners && this.removeListeners();\r\n        cancelFrame(this.updatePoint);\r\n    }\r\n}\r\nfunction transformPoint(info, transformPagePoint) {\r\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\r\n}\r\nfunction subtractPoint(a, b) {\r\n    return { x: a.x - b.x, y: a.y - b.y };\r\n}\r\nfunction getPanInfo({ point }, history) {\r\n    return {\r\n        point,\r\n        delta: subtractPoint(point, lastDevicePoint(history)),\r\n        offset: subtractPoint(point, startDevicePoint(history)),\r\n        velocity: getVelocity(history, 0.1),\r\n    };\r\n}\r\nfunction startDevicePoint(history) {\r\n    return history[0];\r\n}\r\nfunction lastDevicePoint(history) {\r\n    return history[history.length - 1];\r\n}\r\nfunction getVelocity(history, timeDelta) {\r\n    if (history.length < 2) {\r\n        return { x: 0, y: 0 };\r\n    }\r\n    let i = history.length - 1;\r\n    let timestampedPoint = null;\r\n    const lastPoint = lastDevicePoint(history);\r\n    while (i >= 0) {\r\n        timestampedPoint = history[i];\r\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\r\n            secondsToMilliseconds(timeDelta)) {\r\n            break;\r\n        }\r\n        i--;\r\n    }\r\n    if (!timestampedPoint) {\r\n        return { x: 0, y: 0 };\r\n    }\r\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\r\n    if (time === 0) {\r\n        return { x: 0, y: 0 };\r\n    }\r\n    const currentVelocity = {\r\n        x: (lastPoint.x - timestampedPoint.x) / time,\r\n        y: (lastPoint.y - timestampedPoint.y) / time,\r\n    };\r\n    if (currentVelocity.x === Infinity) {\r\n        currentVelocity.x = 0;\r\n    }\r\n    if (currentVelocity.y === Infinity) {\r\n        currentVelocity.y = 0;\r\n    }\r\n    return currentVelocity;\r\n}\r\n\r\nexport { PanSession };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}